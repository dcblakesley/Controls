

 - Pointer for Selects
 - Pointer for Radio buttons


 - Move svgs to their own css file?

 - Look into when EditContext is used/necessary
 - new control bool? radio buttons

Textbox Mask - style the icon to have a pointer


Changes in 1.0.12.x
 * moved away from utilizing bootstrap css classes such as form-group to using classes that start with edit- to avoid conflicts with other libraries
 * New Features
   - IsHidden to hide controls withough wrapping them in an if statement
   - Hiding allows hiding controls based on their own property for [Never, WhenReadonlyAndNull, WhenReadonly, etc.]
     -- This also exists within FormOptions, so the hiding can be controlled over a large group of controls.
 * Control Changes
   - EditRadio and EditCheckedList
     -- Change parameter from HasHorizontalButtons -> IsHorizontal
     -- Removed the need for "Type" parameter, now uses the type of the value passed in.
   - EditSelectEnum
     -- Removed the need for "Type" parameter, now uses the type of the value passed in.
 * New Controls
   - EditBoolNullRadio


Add Tooltips to all controls

<style>
.tooltip-container {
  position: relative; /* Needed for absolute positioning of tooltip */
  display: inline-block; /* Or block, depending on element */
}

.tooltip-container[data-title]:hover::after {
  content: attr(data-title);
  position: absolute;
  bottom: 100%; /* Position above the element */
  left: 50%;
  transform: translateX(-50%);
  background-color: #333;
  color: #fff;
  padding: 8px 12px;
  border-radius: 4px;
  white-space: nowrap; /* Prevent text wrapping */
  visibility: visible;
  opacity: 1;
  transition: opacity 0.3s ease;
  z-index: 10; /* Ensure it appears above other content */
}

.tooltip-container[data-title]::after {
  visibility: hidden;
  opacity: 0;
}
</style>

<div class="tooltip-container" data-title="This is a custom tooltip!">
  Hover over me
</div>
