@using System.ComponentModel
@using System.ComponentModel.DataAnnotations
@using Controls

<EditForm Model=_model FormName="Starship3" @ref="editForm">
    <DataAnnotationsValidator />
    <style>
        .standard-width {
            width: @($"{_model.EditorWidth}px")
        }
        .description {
            margin: 0; padding: 0
        }
    </style>

    <EditNumber @bind-Value=_model.EditorWidth Field=@(() => _model.EditorWidth) Css="standard-width" Step=50 />
        
    <h5>Labels</h5>
    <div class="flex-row flex-wrap">
        <EditString @bind-Value=_model.Name Field=@(() => _model.Name) Css="standard-width"/>
        <EditString @bind-Value=_model.FirstName Field=@(() => _model.FirstName) Css="standard-width"/>
        <EditString @bind-Value=_model.MiddleName Field=@(() => _model.MiddleName) Css="standard-width"/>
        <EditString @bind-Value=_model.LastName Field=@(() => _model.LastName) Css="standard-width"/>
    </div>

    <h5>Descriptions</h5>
    <div class="flex-row flex-wrap">
        <EditString @bind-Value=_model.Dog Field=@(() => _model.Dog) Css="standard-width" />
        <EditString @bind-Value=_model.Cat Field=@(() => _model.Cat) Css="standard-width" />
    </div>

    <h5>Controls</h5>
    <div class="flex-row flex-wrap">
        <EditString @bind-Value=_model.EditString Field=@(() => _model.EditString) Css="standard-width" />
        <EditTextArea @bind-Value=_model.EditTextArea Field=@(() => _model.EditTextArea) Css="standard-width" />
        <EditNumber @bind-Value=_model.EditNumber Field=@(() => _model.EditNumber) Css="standard-width" />
        <EditBool @bind-Value=_model.EditBool Field=@(() => _model.EditBool) Css="standard-width" />
    </div>
    <div class="flex-row flex-wrap">
        <EditDate @bind-Value=_model.EditDate Field=@(() => _model.EditDate) Css="standard-width" />
        <EditSelectEnum Type=typeof(AnimalType) @bind-Value=@_model!.EditSelectEnum Field=@(() => @_model.EditSelectEnum) Css="standard-width" />
    </div>

</EditForm>

@code {
    readonly Person _model = new();
    int _width = 400;
    EditForm editForm; // Set by @ref during Render

    protected override void OnAfterRender(bool firstRender)
    {
        editForm!.EditContext!.Validate();
    }

    class Person
    {
        // Width
        public int EditorWidth { get; set; } = 400;

        // Labels
        public string Name { get; set; } = "";
        public string FirstName { get; set; } = "";
        [DisplayName("MiddleName modified with [DisplayNameAttribute]")]
        public string MiddleName { get; set; } = "";
        [DisplayName("<span style='color: cyan'>Last </span><span style='color: lime'>Name</span><span style='color: magenta'> with embedded html</span>")]
        public string LastName { get; set; } = "";

        // Descriptions
        [Description("This is a description for Dog")]
        public string Dog { get; set; } = "";
        [Description("<span style='color: cyan; font-weight: bold'>This is a description for Cat with embedded html</span>")]
        public string Cat { get; set; } = "";

        // Controls
        [DisplayName("&lt;EditString/&gt;")]     public string     EditString     { get; set; } = "";
        [DisplayName("&lt;EditTextArea/&gt;")]   public string     EditTextArea   { get; set; } = "";
        [DisplayName("&lt;EditNumber/&gt;")]     public double     EditNumber     { get; set; } = 2.5;
        [DisplayName("&lt;EditBool/&gt;")]       public bool       EditBool       { get; set; }
        [DisplayName("&lt;EditDate/&gt;")]       public DateTime   EditDate       { get; set; } = DateTime.UtcNow;
        [DisplayName("&lt;EditSelectEnum/&gt;")] public AnimalType EditSelectEnum { get; set; }

        // Validation

    }

    public enum AnimalType
    {
        Cat = 0,

        [EnumDisplayName("Puppy Dog")]
        Dog = 1,

        [EnumDisplayName("Tweety Bird")]
        Bird = 2,

        [EnumDisplayName("Gold Fish")]
        Fish = 3
    }
}
