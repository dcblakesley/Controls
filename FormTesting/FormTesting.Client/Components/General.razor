@using Controls

@* <button @onclick=@(()=>IsEditMode =! IsEditMode)>Edit Mode</button>
 *@
<button class="btn btn-info" @onclick=@(()=>FormOptions.IsEditMode =! FormOptions.IsEditMode)>Form Edit Mode</button>

<style>
    .standard-width {
        width: 300px;
    }
    .pre code {
        color: white;
        white-space: pre-wrap;
        word-break: break-all;
    }
</style>


@* 
<SelectEnum Type=typeof(AnimalType) @bind-Value=@SelectedAnimalType Field=@(() => SelectedAnimalType) />
<p>@SelectedAnimalType</p>
 *@
 

<EditForm Model=_model FormName="MyAmazingFormName" @ref="_editForm">
    <CascadingValue Value=@FormOptions>
        <ObjectGraphDataAnnotationsValidator />
        
        <fieldset class="flex-column">
            <legend>Zyx32</legend>
        

        
        @* <EditNumber @bind-Value=_model.Age Field=@(() => _model.Age) Format="C" class="standard-width" IsEditMode=false />
        <EditDisplay Text="Blah"/>  *@


        @*      <EditRadioString @bind-Value=_selectedOption Field=@(() => _selectedOption) Options=_options HasHorizontalRadioButtons=false />
        <EditRadioString @bind-Value=_selectedOption Field=@(() => _selectedOption) Options=_options HasHorizontalRadioButtons=true />
        <div>@_selectedOption</div> *@

        <h5>General Usage</h5>
        <ul style="margin-right: 2rem">
            <li>The controls are all setup to provide a consistent look and feel with minimal markup.</li>
            <li>They each provide a Label, Description, Input/Control and Validation</li>
        </ul>

        <div style="margin-left: 3rem">
            <EditString @bind-Value=_model.BasicExample Field=@(() => _model.BasicExample) />
        </div>

        <div><pre><code>@_example1</code></pre></div>
        <div>
            <pre><code>
[Required, MinLength(1), Description("My amazing description")]
public string? BasicExample { get; set; }
        </code></pre>
        </div>
        

        </fieldset>

        <!-- Labels -->
        <h5>Labels</h5>
        <ul>
            <li>Default behavior - Automatically generated from the Property Name</li>
            <li>Spaces are added based on PascalCasing</li>
            <li>Override the Label by using the [DisplayName] Attribute</li>
            <li>Can also be set directly in the markup</li>
            <li>markup can be embedded in the DisplayName attribute or set in markup</li>
        </ul>
        <div class="flex-row flex-wrap">
            <EditString @bind-Value=_model.Name Field=@(() => _model.Name) ContainerClass="standard-width" IsEditMode=false Url="https://www.google.com" />
            <EditString @bind-Value=_model.Name Field=@(() => _model.Name) ContainerClass="standard-width" />
            <EditString @bind-Value=_model.MiddleName Field=@(() => _model.MiddleName) ContainerClass="standard-width" />
            <EditString @bind-Value=_model.LastName Field=@(() => _model.LastName) ContainerClass="standard-width" />
        </div>
        
        <!-- Descriptions -->
        <h5>Descriptions</h5>
        <ul>
            <li>Optional</li>
            <li>Appear under the label</li>
            <li>Support markup</li>
        </ul>
        <div class="flex-row flex-wrap">
            <EditString @bind-Value=_model.Dog Field=@(() => _model.Dog) ContainerClass="standard-width" />
            <EditString @bind-Value=_model.Cat Field=@(() => _model.Cat) ContainerClass="standard-width" />
        </div>

        <!-- Validation -->
        <h5>Validation</h5>
        <ul>
            <li>Utilizes DataAnnotations</li>
            <li>Allows displaying Markup</li>
        </ul>
        <div class="flex-row flex-wrap">
            <EditString @bind-Value=_model.Horse Field=@(() => _model.Horse) ContainerClass="standard-width" />
            <EditString @bind-Value=_model.Zebra Field=@(() => _model.Zebra) ContainerClass="standard-width" />
            <EditString @bind-Value=_model.Lion Field=@(() => _model.Lion) ContainerClass="standard-width" />
            <EditString @bind-Value=_model.Tiger Field=@(() => _model.Tiger) ContainerClass="standard-width" />
        </div> 

        @*         <CascadingValue Value=@(new FormGroupOptions() {Name = "HelloThere"})>
            <AddressEditor Address=@_model.WorkAddress />
        </CascadingValue>

        <CascadingValue Value=@Address2>
            <AddressEditor Address=@_model.HomeAddress />
        </CascadingValue> *@


    </CascadingValue>
</EditForm>

@code
{
    string _example1 = "<EditString @bind-Value=_model.BasicExample Field=@(() => _model.BasicExample) />";
}
