@using Controls

<style>
    .myWidth {
        width: 80px;
    }
</style>

<EditForm Model=_model FormName="MyAmazingFormName" @ref="editForm">
    <ObjectGraphDataAnnotationsValidator/>

    <div class="flex-row">
        <button class="b-primary" @onclick=@(() => FormOptions.ShowBoundValues = !FormOptions.ShowBoundValues) type="button">Display bound values</button>
        <button class="b-danger" @onclick=@(() => FormOptions.IsEditMode = !FormOptions.IsEditMode) type="button">Edit Mode</button>
        <EditSelectEnum Type=typeof(HidingMode) @bind-Value=@FormOptions.Hiding Field=@(() => FormOptions.Hiding) />
        <button class="" @onclick=@(() => _isHorizontal = !_isHorizontal)>Toggle Horizontal</button>
    </div>

    <fieldset>
        <CascadingValue Value=@FormOptions>
            <legend class="h2">Controls</legend>

            <div class="flex-row flex-wrap">
                <EditDate @bind-Value=_model.EditDate Field=@(() => _model.EditDate) DateFormat="D" />
                <EditDisplay Label="EditDisplay" Text="My text" IsHidden=false/>
                <EditNumber @bind-Value=_model.EditNumber Field=@(() => _model.EditNumber)/>
                <EditString @bind-Value=_model.EditString Field=@(() => _model.EditString!) Placeholder="Hello world!" />
                <EditTextArea @bind-Value=_model.EditTextArea Field=@(() => _model.EditTextArea) />
                <EditSelectEnum Type=typeof(AnimalType) @bind-Value=@_model.EditSelectEnum Field=@(() => _model.EditSelectEnum) />
                <EditSelectString @bind-Value=@_model.EditSelectString Field=@(() => _model.EditSelectString) Options="_colorOptions" />
                <EditSelect @bind-Value=_model.EditSelect Field=@(() => _model.EditSelect)>
                    @foreach (var o in _plants.OrderBy(x => x.Name))
                    {
                        <option checked=@(() => _model.EditSelect == o.Id)
                                value=@o.Id
                                data-test-id=@($"option-{o.Id}")>
                            @o.Name
                        </option>
                    }
                </EditSelect>
            </div>

            <div class="flex-row flex-wrap">
                <EditRadioString @bind-Value=_model.EditRadioString 
                                 Field=@(() => _model.EditRadioString) 
                                 Options=@_colorOptions 
                                 HasOther=true 
                                 IsHorizontal=@_isHorizontal />

                <EditRadioEnum Type=typeof(AnimalType) 
                               @bind-Value=_model.EditRadioEnum
                               Field=@(() => _model.EditRadioEnum)
                               IsHorizontal=@_isHorizontal />
                
                <EditCheckedStringList @bind-Value=_model.EditCheckedStringList
                                       Field=@(() => _model.EditCheckedStringList!)
                                       Options=@_editCheckedStringListOptions 
                                       IsHorizontal=@_isHorizontal />
            </div>
        </CascadingValue>
    </fieldset>
</EditForm>


@code {
    readonly Person _model = new();
    EditForm editForm; // Set by @ref during Render
    public FormOptions FormOptions { get; set; } = new();
    readonly List<string> _colorOptions = ["None", "Red", "Green", "Blue", "Yellow", "Orange", "Purple", "Black", "White"];
    readonly List<string> _editCheckedStringListOptions = ["Azathoth", "Yog-Sothoth", "Shub-Niggurath", "Nyarlathotep", "Cthulhu", "Hastur", "Dagon", "Ithaqua", "Tsathoggua" ];

    List<Plant> _plants = Plant.GetTestData();
    bool _isHorizontal = false;

    
    public HidingMode HidingMode { get; set; }
}