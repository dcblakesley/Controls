@using Controls

<div class="flex-row">
    <button class="btn btn-info" @onclick=@(() => FormOptions.ShowBoundValues = !FormOptions.ShowBoundValues)>Display bound values</button>
</div>

<EditForm Model=_model FormName="MyAmazingFormName" @ref="editForm">
    <ObjectGraphDataAnnotationsValidator/>

    <CascadingValue Value=@FormOptions>
        <div class="flex-row flex-wrap">
            <EditBool @bind-Value=_model.EditBool Field=@(() => _model.EditBool)/>
            <EditDate @bind-Value=_model.EditDate Field=@(() => _model.EditDate) />
            <EditDisplay Label="EditDisplay" Text="My text"/>
            <EditNumber @bind-Value=_model.EditNumber Field=@(() => _model.EditNumber) />

            <EditString @bind-Value=_model.EditString Field=@(() => _model.EditString) />
            <EditTextArea @bind-Value=_model.EditTextArea Field=@(() => _model.EditTextArea)  />
            <EditSelectEnum Type=typeof(AnimalType) @bind-Value=@_model.EditSelectEnum Field=@(() => _model.EditSelectEnum)  />
            <EditSelectString @bind-Value=@_model.EditSelectString Field=@(() => _model.EditSelectString) Options="_colorOptions" />
            <EditSelect @bind-Value=_model.EditSelect Field=@(() => _model.EditSelect)>
                @foreach (var o in _plants.OrderBy(x => x.Name))
                {
                    <option checked=@(() => _model.EditSelect == o.Id) value=@o.Id data-test-id=@($"option-{o.Id}")>@o.Name</option>
                }
            </EditSelect>
        </div>

        <div class="flex-row flex-wrap">
            <EditRadioString @bind-Value=_model.EditRadioString Field=@(() => _model.EditRadioString) Options=@_colorOptions HasOther=true/>
            <EditRadioEnum Type=typeof(AnimalType) @bind-Value=_model.EditRadioEnum Field=@(() => _model.EditRadioEnum)/>
        </div>
    </CascadingValue>
</EditForm>


@code {
    readonly Person _model = new();
    EditForm editForm; // Set by @ref during Render
    public FormOptions FormOptions { get; set; } = new();
    readonly List<string> _colorOptions = ["", "Red", "Green", "Blue", "Yellow", "Orange", "Purple", "Black", "White"];
    List<Plant> _plants = Plant.GetTestData();
}