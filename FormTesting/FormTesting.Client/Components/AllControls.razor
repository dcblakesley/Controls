@using Controls


<div class="flex-row">
    <button class="b-primary" @onclick=@(() => FormOptions.ShowBoundValues = !FormOptions.ShowBoundValues)>Display bound values</button>
    <button class="b-danger" @onclick=@(() => FormOptions.IsEditMode = !FormOptions.IsEditMode)>Edit Mode</button>
</div>

<style>
    .myWidth {
        width: 80px;
    }
</style>

<EditForm Model=_model FormName="MyAmazingFormName" @ref="editForm">
    <ObjectGraphDataAnnotationsValidator/>
    
    <fieldset id="blah">
        <CascadingValue Value=@FormOptions>
            <legend>
                <h1>Stuff</h1>
            </legend>

            <div class="flex-row flex-wrap">
                <EditBool @bind-Value=_model.EditBool Field=@(() => _model.EditBool) />
                <EditDate @bind-Value=_model.EditDate Field=@(() => _model.EditDate) ShowTime=true/>
                <EditDisplay Label="EditDisplay" Text="My text"/>
                <EditNumber @bind-Value=_model.EditNumber Field=@(() => _model.EditNumber)/>
                    
                <EditString @bind-Value=_model.EditString Field=@(() => _model.EditString) Placeholder="Hello world!"  />
                <EditTextArea @bind-Value=_model.EditTextArea Field=@(() => _model.EditTextArea)/>
                <EditSelectEnum Type=typeof(AnimalType) @bind-Value=@_model.EditSelectEnum Field=@(() => _model.EditSelectEnum)/>
                <EditSelectString @bind-Value=@_model.EditSelectString Field=@(() => _model.EditSelectString) Options="_colorOptions"/>
                <EditSelect @bind-Value=_model.EditSelect Field=@(() => _model.EditSelect)>
                    @foreach (var o in _plants.OrderBy(x => x.Name))
                    {
                        <option checked=@(() => _model.EditSelect == o.Id) value=@o.Id data-test-id=@($"option-{o.Id}")>@o.Name</option>
                    }
                </EditSelect>
            </div>

            <div class="flex-row flex-wrap">
                <button class="btn btn-info" @onclick=@(()=>_isHorizontal = !_isHorizontal)>Toggle Horizontal</button>
                <div style="max-width: 400px">
                    <EditRadioString @bind-Value=_model.EditRadioString 
                                     LabelClass="myWidth"
                                     Field=@(() => _model.EditRadioString) 
                                     Options=@_colorOptions 
                                     HasOther=true 
                                     HasHorizontalRadioButtons=@_isHorizontal />

                </div>
                <EditRadioEnum Type=typeof(AnimalType) @bind-Value=_model.EditRadioEnum Field=@(() => _model.EditRadioEnum)/>
            </div>
        </CascadingValue>
    </fieldset>
</EditForm>


@code {
    readonly Person _model = new();
    EditForm editForm; // Set by @ref during Render
    public FormOptions FormOptions { get; set; } = new();
    readonly List<string> _colorOptions = ["None", "Red", "Green", "Blue", "Yellow", "Orange", "Purple", "Black", "White"];
    List<Plant> _plants = Plant.GetTestData();
    bool _isHorizontal = false;
}