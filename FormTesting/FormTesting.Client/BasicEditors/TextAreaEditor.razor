@using System.Linq.Expressions
@inherits InputTextArea

<div class="form-group">
    <FormLabel Id=@_id Name=@_name IsRequired=@_isRequired Description=@_description />

    <textarea @bind="CurrentValue" id=@_id data-test-id=@_id class=@Css ></textarea>
    
    <FieldValidationDisplay EditContext=EditContext FieldIdentifier=_fieldIdentifier Attributes=_attributes />
</div>

@code {
    [Parameter] public string? Id { get; set; }
    [Parameter] public required Expression<Func<string>> Field { get; set; }
    [Parameter] public string Css { get; set; } = "";

    bool _isRequired;
    string _id = string.Empty;
    string _name = string.Empty;
    string? _description;
    List<Attribute> _attributes;
    FieldIdentifier _fieldIdentifier;

    // Get validation messages for FieldName
    protected override void OnInitialized()
    {
        _fieldIdentifier = FieldIdentifier.Create(Field);
        _attributes = AttributesHelper.GetExpressionCustomAttributes(Field);
        _name = AttributesHelper.GetLabelText(_attributes, _fieldIdentifier);
        _id = AttributesHelper.GetId(Id, _name);
        _description = AttributesHelper.GetDescription(_attributes);
    }
}