@using Controls.Helpers
@using Microsoft.AspNetCore.Components.Forms
@typeparam TEnum
@inherits InputBase<TEnum>

@if (ShouldShowComponent)
{
    <div class="form-group @OuterClass">

        <fieldset>
            <legend>
                <FormLabel Id=@_id FieldIdentifier=@_fieldIdentifier Attributes=@_attributes Label=@Label />
            </legend>

            @if (ShowEditor)
            {
                <InputRadioGroup
                    @bind-Value=@CurrentValue
                    id=@_id
                    data-test-id=@_id
                    disabled=@IsDisabled
                    class=@CssClass
                    aria-required=@_isRequired
                    aria-describedby=@($"desc-{_id}")
                    aria-errormessage=@($"error-msg-{_id}")>

                    <div class=@(HasHorizontalRadioButtons ? "flex-row flex-wrap" : "flex-column") style="row-gap: 0">
                        @foreach (var option in GetOptions())
                        {
                            <label class=@LabelClass>
                                <InputRadio
                                    Value=@option 
                                    class=@CssClass
                                    id=@($"rb_{_id}_{option}")
                                    data-test-id=@($"rb_{_id}_{option}")/>

                                @((MarkupString)option.GetName())
                            </label>
                        }
                    </div>
                </InputRadioGroup>
            }
            else
            {
                <ReadOnlyValue Id=@_id IsRequired=_isRequired CssClass=@CssClass Text=@Value?.GetName() />
            }

            <FieldValidationDisplay Id=@_id FieldIdentifier=_fieldIdentifier Attributes=_attributes />
            @if (FormOptions != null && FormOptions.ShowBoundValues)
            {
                <div class="bound-value">@CurrentValueAsString</div>
            }
        </fieldset>
    </div>  
}
