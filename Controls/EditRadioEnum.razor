@using Controls.Helpers
@using Microsoft.AspNetCore.Components.Forms
@typeparam TEnum
@inherits InputBase<TEnum>

@if (ShouldShowComponent())
{
    <div class="edit-control-wrapper @OuterClass">

        <fieldset class="edit-radio-fieldset">
            <FormLabel Id=@_id FieldIdentifier=@_fieldIdentifier Attributes=@_attributes Label=@Label IsLegend=true />

            @if (ShowEditor)
            {
                <InputRadioGroup
                    @bind-Value=@CurrentValue
                    id=@_id
                    data-test-id=@_id
                    disabled=@IsDisabled
                    class=@CssClass
                    required=@_isRequired
                    aria-describedby=@($"desc-{_id}")
                    aria-errormessage=@($"error-msg-{_id}")>

                        <div class=@(HasHorizontalRadioButtons
                                       ? "edit-radio-buttons-container-horizontal"
                                       : "edit-radio-buttons-container-vertical")>
                        @foreach (var option in GetOptions())
                        {
                            <label class=@($"edit-radio-labels {LabelClass}")>
                                <InputRadio Value=@option
                                            class=@($"{CssClass}")
                                            id=@($"rb-{_id}-{option}")
                                            data-test-id=@($"rb-{_id}-{option}")/>

                                @((MarkupString)option.GetName())
                            </label>
                        }
                    </div>
                </InputRadioGroup>
            }
            else
            {
                <ReadOnlyValue Id=@_id IsRequired=_isRequired CssClass=@CssClass Text=@Value?.GetName() />
            }

            <FieldValidationDisplay Id=@_id FieldIdentifier=_fieldIdentifier Attributes=_attributes />
            @if (FormOptions != null && FormOptions.ShowBoundValues)
            {
                <div class="bound-value">@CurrentValueAsString</div>
            }
        </fieldset>
    </div>  
}
