@using Microsoft.AspNetCore.Components.Forms
@inherits InputCheckbox

@if (ShouldShowComponent())
{
    <div class="edit-control-wrapper @ContainerClass">

        @if (!ShouldHideLabel)
        {           
            <label class="edit-checkbox-label" for=@_id>
                <input type="checkbox"
                       value="@CurrentValue"
                       @onchange="HandleCheckboxChange"
                       @onclick:preventDefault="(!ShowEditor || IsDisabled) && AllowFocusWhenDisabled"
                       @onkeydown="PreventSpacebarToggle"
                       class="@CssClass"
                       id=@_id
                       data-test-id=@_id
                       checked=@CurrentValue
                       tabindex="0"
                       aria-disabled=@((!ShowEditor || IsDisabled) ? "true" : null)
                       disabled=@((!ShowEditor || IsDisabled) && !AllowFocusWhenDisabled)
                       aria-required=@_isRequired
                       aria-describedby=@($"error-msg-{_id} desc-{_id} tooltip-{_id}")
                       aria-errormessage=@($"error-msg-{_id}") />

                @((MarkupString)DisplayLabel())

                <LabelTooltip Id=@Id Tooltip=@Tooltip Attributes=@_attributes/>

            </label>
            @if (DisplayDescription() != null)
            {
                <p class="edit-label-description" id="desc-@Id" aria-hidden="true">
                    @((MarkupString)DisplayDescription()!)
                </p>
            }
        }
        else
        {
            <input type="checkbox"
                   value="@CurrentValue"
                   @onchange="HandleCheckboxChange"
                   @onclick:preventDefault="(!ShowEditor || IsDisabled) && AllowFocusWhenDisabled"
                   @onkeydown="PreventSpacebarToggle"
                   class="@CssClass"
                   id=@_id
                   data-test-id=@_id
                   checked=@CurrentValue
                   tabindex="0"
                   aria-disabled=@((!ShowEditor || IsDisabled) ? "true" : null)
                   disabled=@((!ShowEditor || IsDisabled) && !AllowFocusWhenDisabled)
                   aria-required=@_isRequired
                   aria-describedby=@($"error-msg-{_id} desc-{_id} tooltip-{_id}")
                   aria-errormessage=@($"error-msg-{_id}") />
        }

        <FieldValidationDisplay Id=@_id FieldIdentifier=_fieldIdentifier Attributes=_attributes/>
        @if (FormOptions != null && FormOptions.ShowBoundValues)
        {
            <div class="bound-value">@CurrentValueAsString</div>
        }
    </div>
}

@code {
    [Parameter]
    public bool AllowFocusWhenDisabled { get; set; } = true;
    
    void HandleCheckboxChange(ChangeEventArgs args)
    {
        // Only update the value if the checkbox is not disabled
        if (ShowEditor && !IsDisabled)
        {
            CurrentValue = (bool)args.Value;
        }
    }
    string? DisplayDescription() => Description ?? _attributes.Description();
}
