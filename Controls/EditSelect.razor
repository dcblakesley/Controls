@using System.Linq.Expressions
@using Microsoft.AspNetCore.Components.Forms
@inherits InputSelect<TValue>
@typeparam TValue

<div class="form-group">
    <FormLabel Id=@_id FieldIdentifier=@_fieldIdentifier Attributes=@_attributes Label=@Label />
    
    <InputSelect @bind-Value=@CurrentValue class=@CssClass>
        @ChildContent
    </InputSelect> 

    <FieldValidationDisplay FieldIdentifier=_fieldIdentifier Attributes=_attributes />
</div>

@code {
    [Parameter] public string? Id { get; set; }
    [Parameter] public required Expression<Func<TValue>> Field { get; set; }
    //[Parameter] public required IEnumerable<TValue> Options { get; set; }
    [Parameter] public string? Label { get; set; }
    
    string _id = string.Empty;
    List<Attribute>? _attributes;
    FieldIdentifier _fieldIdentifier;

    // Get validation messages for FieldName
    protected override void OnInitialized()
    {
        base.OnInitialized();
        _fieldIdentifier = FieldIdentifier.Create(Field);
        _attributes = AttributesHelper.GetExpressionCustomAttributes(Field);
        _id = AttributesHelper.GetId(Id, _fieldIdentifier);
    }
}