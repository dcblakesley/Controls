@using Microsoft.AspNetCore.Components.Forms

<h1>EditRadio Demo</h1>

<EditForm Model="@_model" class="flex-row flex-wrap" @ref=_form>
    <ObjectGraphDataAnnotationsValidator />

    <div class="demo-section">
        <h2>Basic Usage</h2>
        <EditRadio @bind-Value="_model.BasicRadio" 
                  Field="@(() => _model.BasicRadio)">
            @foreach (var option in _numberOptions)
            {
                <InputRadio Value="@option" />
                <label>@option</label>
            }
        </EditRadio>
    </div>

    <div class="demo-section">
        <h2>Horizontal Layout</h2>
        <EditRadio @bind-Value="_model.HorizontalLayout"
                  IsHorizontal="true"
                  Field="@(() => _model.HorizontalLayout)">
            @foreach (var option in _numberOptions)
            {
                <InputRadio Value="@option" />
                <label>@option</label>
            }
        </EditRadio>
    </div>

    <div class="demo-section">
        <h2>Custom Styling</h2>
        <EditRadio @bind-Value="_model.CustomClass"
                  ContainerClass="my-custom-container"
                  CssClass="my-custom-radio"
                  Field="@(() => _model.CustomClass)">
            @foreach (var option in _numberOptions)
            {
                <InputRadio Value="@option" />
                <label>@option</label>
            }
        </EditRadio>
    </div>

    <div class="demo-section">
        <h2>State Options</h2>
        <EditRadio @bind-Value="_model.DisabledField"
                  IsDisabled="true"
                  Field="@(() => _model.DisabledField)">
            @foreach (var option in _numberOptions)
            {
                <InputRadio Value="@option" />
                <label>@option</label>
            }
        </EditRadio>

        <EditRadio @bind-Value="_model.RequiredField"
                  Field="@(() => _model.RequiredField)">
            @foreach (var option in _numberOptions)
            {
                <InputRadio Value="@option" />
                <label>@option</label>
            }
        </EditRadio>
    </div>
</EditForm>

@code {
    private readonly DemoEditRadioModel _model = new();
    private readonly int[] _numberOptions = { 1, 2, 3, 4, 5 };

    EditForm _form;
    protected override void OnAfterRender(bool firstRender) => _form.EditContext!.Validate();

    public class DemoEditRadioModel
    {
        public int BasicRadio { get; set; }
        public int HorizontalLayout { get; set; }
        public int CustomClass { get; set; }
        
        [Required(ErrorMessage = "Please select an option")]
        public int RequiredField { get; set; }
        
        public int DisabledField { get; set; }
    }
}

<style>
    .demo-section {
        margin: 1rem;
        padding: 1rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        min-width: 300px;
    }

    .my-custom-container {
        background-color: #f5f5f5;
        padding: 10px;
        border-radius: 4px;
    }

    .my-custom-radio {
        accent-color: #0066cc;
    }

    .my-custom-radio label {
        margin-left: 8px;
    }
</style>