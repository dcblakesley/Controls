@using Microsoft.AspNetCore.Components.Forms

<h1>EditRadio Demo</h1>

<EditForm Model="@_model" class="flex-row flex-wrap" @ref=_form>
    <ObjectGraphDataAnnotationsValidator/>

    <div class="demo-section">
        <EditRadio @bind-Value="_model.BasicRadio" 
                   Field="@(() => _model.BasicRadio)">
            @foreach (var option in _numberOptions)
            {
                <label>
                    <InputRadio Value="@option"
                                class="my-custom-radio"
                                id=@($"rb-EditRadio-{option}")
                                data-test-id=@($"rb-EditRadio-{option}") />
                    @option
                </label>
            }
        </EditRadio>
    </div>
    
    <div class="demo-section">
        <EditRadio @bind-Value="_model.CustomStyling"
                   Field="@(() => _model.CustomStyling)"
                   ContainerClass="my-custom-container"
                   class="my-custom-radio">
            @foreach (var option in _numberOptions)
            {
                <label class=@($"edit-radio-label")>
                    <InputRadio Value=@option
                                class="my-custom-radio"
                                id=@($"rb-EditRadio-{option}")
                                data-test-id=@($"rb-EditRadio-{option}")/>
                    @option
                </label>
            }
        </EditRadio>
        
        <style>
            .my-custom-container { background-color: orange; padding: 20px; border-radius: 40px; }
            .my-custom-radio { accent-color: #0066cc; }
            .my-custom-radio label { margin-left: 8px; }
        </style>
    </div>

    <div class="demo-section">
        <EditRadio @bind-Value="_model.Disabled"
                   Field="@(() => _model.Disabled)"
                   IsDisabled="true">
            @foreach (var option in _numberOptions)
            {
                <label>
                    <InputRadio Value="@option"
                                class="my-custom-radio"
                                id=@($"rb-EditRadio-{option}")
                                data-test-id=@($"rb-EditRadio-{option}") />
                    @option
                </label>
            }
        </EditRadio>
    </div>
    
    <div class="demo-section">
        <EditRadio @bind-Value="_model.Required"
                   Field="@(() => _model.Required)">
            @foreach (var option in _numberOptions)
            {
                <label>
                    <InputRadio Value="@option"
                                class="my-custom-radio"
                                id=@($"rb-EditRadio-{option}")
                                data-test-id=@($"rb-EditRadio-{option}") />
                    @option
                </label>
            }
        </EditRadio>
    </div>

    <div class="demo-section">
        <EditRadio @bind-Value="_model.HorizontalLayout"
                   Field="@(() => _model.HorizontalLayout)"
                   IsHorizontal="true">
            @foreach (var option in _colorOptions)
            {
                <label style="color: @option.ToLower()">
                    <InputRadio Value=@option
                                class="my-custom-radio"
                                id=@($"rb-EditRadio-{option}")
                                data-test-id=@($"rb-EditRadio-{option}") />
                    @option
                </label>
            }
        </EditRadio>
    </div>
</EditForm>

@code {
    readonly DemoEditRadioModel _model = new();
    readonly int[] _numberOptions = [1, 2, 3, 4, 5];
    readonly string[] _colorOptions = ["Red", "Green", "Blue", "Yellow", "Purple", "Orange", "Lime", "Magenta"];

    EditForm? _form;
    [CascadingParameter] public bool IsForcedValidation { get; set; }
    protected override void OnAfterRender(bool firstRender) { if(IsForcedValidation) _form.EditContext!.Validate(); } 

    
    
    // protected override void OnAfterRender(bool firstRender) => _form?.EditContext!.Validate();

    public class DemoEditRadioModel
    {
        public int BasicRadio { get; set; }
        public string? HorizontalLayout { get; set; }
        public int CustomStyling { get; set; }

        [Required]
        public int? Required { get; set; }

        public int Disabled { get; set; }
    }

}
