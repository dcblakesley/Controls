@using Microsoft.AspNetCore.Components.Forms

<h1>EditString Demo</h1>

<EditForm Model="@_model" class="flex-row flex-wrap" @ref="_form">
    <ObjectGraphDataAnnotationsValidator/>

    <div class="demo-section">
        <EditString @bind-Value="_model.BasicString" Field="@(() => _model.BasicString)"/>

        <EditString @bind-Value="_model.BasicString" Field="@(() => _model.BasicString)" IsEditMode=false/>
    </div>

    <div class="demo-section">
        <EditString @bind-Value="_model.WithPlaceholder"
                    Placeholder="Enter some text..."
                    Field="@(() => _model.WithPlaceholder)"/>
    </div>

    <div class="demo-section">
        <h3>Tooltip Examples</h3>
    
        <EditString @bind-Value="_model.WithTooltipFromAttribute"
                    Field="@(() => _model.WithTooltipFromAttribute)"/>

        <EditString @bind-Value="_model.WithTooltipInHtml"
                    Tooltip="This tooltip was set directly in the HTML markup, not from a model attribute!"
                    Field="@(() => _model.WithTooltipInHtml)"/>

        <EditString @bind-Value="_model.WithTooltipOverride"
                    Tooltip="This HTML tooltip overrides the attribute tooltip"
                    Field="@(() => _model.WithTooltipOverride)"/>
    </div>

    <div class="demo-section">
        <EditString @bind-Value="_model.MaskedText"
                    MaskText="*"
                    Field="@(() => _model.MaskedText)"/>

        <EditString Description="MaskText = *"
                    @bind-Value="_model.MaskedText"
                    IsEditMode="false"
                    MaskText="*"
                    Field="@(() => _model.MaskedText)"/>

        <EditString Description="MaskText = ***-**-"
                    @bind-Value="_model.MaskedText"
                    IsEditMode="false"
                    MaskText="***-**-"
                    Field="@(() => _model.MaskedText)"/>
    </div>

    <div class="demo-section">
        <style>
            .my-custom-container { background-color: purple; padding: 10px; border-radius: 4px; }
            .my-custom-input { border: 2px solid #0066cc; color: green; border-radius: 4px; padding: 4px; width: 100%; }
        </style>
        <EditString @bind-Value="_model.CustomStyling"
                    ContainerClass="my-custom-container"
                    class="my-custom-input"
                    Field="@(() => _model.CustomStyling)"/>
    </div>

    <div class="demo-section">
        <EditString @bind-Value="_model.Disabled"
                    IsDisabled="true"
                    Field="@(() => _model.Disabled)"/>

        <EditString @bind-Value="_model.Required"
                    Field="@(() => _model.Required)"/>
    </div>

    <div class="demo-section">
        <EditString @bind-Value="_model.UrlField"
                    Url="https://example.com"
                    UrlTarget="_blank"
                    Field="@(() => _model.UrlField)"/>
        <EditString @bind-Value="_model.UrlField"
                    Url="https://example.com"
                    UrlTarget="_blank"
                    IsEditMode=false
                    Field="@(() => _model.UrlField)"/>
    </div>
</EditForm>

@code {
    EditForm? _form;
    protected override void OnAfterRender(bool firstRender) => _form?.EditContext!.Validate();

    readonly DemoEditStringModel _model = new();

    public class DemoEditStringModel
    {
        [Description("Basic Description")]
        public string BasicString { get; set; } = "";
        public string WithPlaceholder { get; set; } = "";
   
        [ToolTip("This tooltip comes from the [ToolTip] attribute on the model property")]
        [DisplayName("With Tooltip From Attribute")]
     public string WithTooltipFromAttribute { get; set; } = "";
      
        [DisplayName("With Tooltip In HTML")]
        public string WithTooltipInHtml { get; set; } = "";
        
     [ToolTip("This is the attribute tooltip (will be overridden)")]
  [DisplayName("With Tooltip Override")]
        public string WithTooltipOverride { get; set; } = "";
      
        public string MaskedText { get; set; } = "123-45-6789";
        public string UrlField { get; set; } = "Friendly name for a website";
        public string CustomStyling { get; set; } = "";

        [Required] public string Required { get; set; } = "";

        public string Disabled { get; set; } = "";
    }

}