@using Microsoft.AspNetCore.Components.Forms

<h1>EditSelect Demo</h1>

<EditForm Model="@_model" class="flex-row flex-wrap" @ref=_form>
    <ObjectGraphDataAnnotationsValidator/>

    <div class="demo-section">
        <EditSelect @bind-Value="_model.BasicSelect"
                    Field="@(() => _model.BasicSelect)">
            <option value="">Select a number...</option>
            @foreach (var number in Enumerable.Range(1, 5))
            {
                <option value="@number">Number @number</option>
            }
        </EditSelect>

        <EditSelect @bind-Value="_model.BasicSelect"
                    Field="@(() => _model.BasicSelect)"
                    IsEditMode=false>
            <option value="">Select a number...</option>
            @foreach (var number in Enumerable.Range(1, 5))
            {
                <option value="@number">Number @number</option>
            }
        </EditSelect>
    </div>

    <div class="demo-section">
        <EditSelect @bind-Value="_model.PlantSelect" Field="@(() => _model.PlantSelect)">
            <option value="0">Choose a plant...</option>
            @foreach (var plant in _plants)
            {
                <option value="@plant.Id">@plant.Name</option>
            }
        </EditSelect>
    </div>

    <div class="demo-section">
        
        <style>
            .my-custom-container { background-color: orange; padding: 10px; border-radius: 4px; }
            .my-custom-select { border: 2px solid black; border-radius: 4px; padding: 4px; min-width: 200px; color: blueviolet }
        </style>

        <EditSelect @bind-Value="_model.CustomStyling"
                    Field="@(() => _model.CustomStyling)"
                    ContainerClass="my-custom-container"
                    class="my-custom-select">
            <option value="">Select a color...</option>
            @foreach (var color in _colors)
            {
                <option value="@color">@color</option>
            }
        </EditSelect>
    </div>

    <div class="demo-section">
        <EditSelect @bind-Value="_model.Disabled"
                    Field="@(() => _model.Disabled)"
                    IsDisabled="true">
            <option value="">Select a color...</option>
            @foreach (var color in _colors)
            {
                <option value="@color">@color</option>
            }
        </EditSelect>

        <EditSelect @bind-Value="_model.Required"
                    Field="@(() => _model.Required)">
            <option value="">Select a color...</option>
            @foreach (var color in _colors)
            {
                <option value="@color">@color</option>
            }
        </EditSelect>
    </div>
</EditForm>

@code {
    readonly DemoEditSelectModel _model = new();
    readonly List<string> _colors = ["Red", "Green", "Blue", "Yellow", "Purple"];
    readonly List<Plant> _plants = Plant.GetTestData();
    
    EditForm _form;
    protected override void OnAfterRender(bool firstRender) => _form.EditContext!.Validate();

    public class DemoEditSelectModel
    {
        public int BasicSelect { get; set; }
        public int PlantSelect { get; set; }
        public string CustomStyling { get; set; } = "";

        [Required(ErrorMessage = "Please select a color")]
        public string Required { get; set; } = "";

        public string Disabled { get; set; } = "";
    }

}
