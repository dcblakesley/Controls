@using Microsoft.AspNetCore.Components.Forms

<h1>EditSelect Demo</h1>

<EditForm Model="@_model" class="flex-row flex-wrap" @ref=_form>
    <ObjectGraphDataAnnotationsValidator />

    <div class="demo-section">
        <h2>Basic Usage</h2>
        <EditSelect @bind-Value="_model.BasicSelect"
                    Field="@(() => _model.BasicSelect)">
            <option value="">Select a number...</option>
            @foreach (var number in Enumerable.Range(1, 5))
            {
                <option value="@number">Number @number</option>
            }
        </EditSelect>      
        
        <h2>Read-only</h2>
        <EditSelect @bind-Value="_model.BasicSelect"
                    Field="@(() => _model.BasicSelect)" 
                    IsEditMode=false>
            <option value="">Select a number...</option>
            @foreach (var number in Enumerable.Range(1, 5))
            {
                <option value="@number">Number @number</option>
            }
        </EditSelect>
    </div>

    <div class="demo-section">
        <h2>With Objects</h2>
        <EditSelect @bind-Value="_model.PlantSelect"
                   Field="@(() => _model.PlantSelect)">
            <option value="">Choose a plant...</option>
            @foreach (var plant in _plants)
            {
                <option value="@plant">@plant.Name</option>
            }
        </EditSelect>
    </div>

    <div class="demo-section">
        <h2>Custom Styling</h2>
        <EditSelect @bind-Value="_model.CustomClass" 
                    Field="@(() => _model.CustomClass)" 
                    ContainerClass="my-custom-container" 
                    class="my-custom-select">
            <option value="">Select a color...</option>
            @foreach (var color in _colors)
            {
                <option value="@color">@color</option>
            }
        </EditSelect>
    </div>

    <div class="demo-section">
        <h2>State Options</h2>
        <EditSelect @bind-Value="_model.DisabledField"
                    Field="@(() => _model.DisabledField)"
                    IsDisabled="true">
            <option value="">Select a color...</option>
            @foreach (var color in _colors)
            {
                <option value="@color">@color</option>
            }
        </EditSelect>

        <EditSelect @bind-Value="_model.RequiredField" 
                    Field="@(() => _model.RequiredField)">
            <option value="">Select a color...</option>
            @foreach (var color in _colors)
            {
                <option value="@color">@color</option>
            }
        </EditSelect>
    </div>
</EditForm>

@code {
    private readonly DemoEditSelectModel _model = new();
    private readonly List<string> _colors = new() { "Red", "Green", "Blue", "Yellow", "Purple" };
    private readonly List<Plant> _plants = Plant.GetTestData();


    EditForm _form;
    protected override void OnAfterRender(bool firstRender) => _form.EditContext!.Validate();

    public class DemoEditSelectModel
    {
        public int BasicSelect { get; set; }
        public Plant PlantSelect { get; set; } = null!;
        public string CustomClass { get; set; } = "";

        [Required(ErrorMessage = "Please select a color")]
        public string RequiredField { get; set; } = "";
        
        public string DisabledField { get; set; } = "";
    }
}

<style>
    .my-custom-container {
        background-color: orange;
        padding: 10px;
        border-radius: 4px;
    }

    .my-custom-select {
        border: 2px solid black;

        border-radius: 4px;
        padding: 4px;
        min-width: 200px;
    }
</style>