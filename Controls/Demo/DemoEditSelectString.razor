@using Microsoft.AspNetCore.Components.Forms

<h1>EditSelectString Demo</h1>

<EditForm Model="@_model" class="flex-row flex-wrap" @ref=_form>
    <ObjectGraphDataAnnotationsValidator/>

    <div class="demo-section">
        <h2>Basic Usage</h2>
        <EditSelectString TValue="string"
                          @bind-Value="_model.BasicSelect"
                          Label="Basic Example"
                          Options="_colors"
                          Field="@(() => _model.BasicSelect)" />       
        
        <h2>Read-only</h2>
        <EditSelectString TValue="string"
                          @bind-Value="_model.BasicSelect"
                          Label="Basic Example"
                          IsEditMode=false
                          Options="_colors"
                          Field="@(() => _model.BasicSelect)" />
    </div>

    <div class="demo-section">

        <style>
            .my-custom-container {
                background-color: yellow;
                padding: 10px;
                border-radius: 4px;
            }

            .my-custom-select {
                border: 2px solid #0066cc;
                color: purple;
                border-radius: 4px;
                padding: 4px;
                min-width: 200px;
            }
        </style>


        <h2>Custom Styling</h2>
        <EditSelectString @bind-Value="_model.CustomClass"
                          Label="With Custom CSS Class"
                          Options="_colors"
                          ContainerClass="my-custom-container"
                          class="my-custom-select"
                          Field="@(() => _model.CustomClass)"/>
    </div>

    <div class="demo-section">
        <h2>State Options</h2>
        <EditSelectString @bind-Value="_model.Disabled"
                          Label="Disabled State"
                          Options="_colors"
                          IsDisabled="true"
                          Field="@(() => _model.Disabled)"/>

        <EditSelectString @bind-Value="_model.Required"
                          Label="Required Field"
                          Options="_colors"
                          Field="@(() => _model.Required)"/>
    </div>
</EditForm>

@code {

    EditForm _form;
    protected override void OnAfterRender(bool firstRender) => _form.EditContext!.Validate();

    readonly DemoEditSelectStringModel _model = new();
    readonly List<string> _colors = ["Red", "Green", "Blue", "Yellow", "Neon Purple"];

    public class DemoEditSelectStringModel
    {
        public string BasicSelect { get; set; } = "";
        public string HtmlContent { get; set; } = "";
        public string CustomClass { get; set; } = "";

        [Required]
        public string Required { get; set; } = "";

        public string Disabled { get; set; } = "";
    }

}