@using Microsoft.AspNetCore.Components.Forms

<h1>EditDate Demo</h1>

<EditForm Model="@_model" class="flex-row flex-wrap" @ref=_form>
    <ObjectGraphDataAnnotationsValidator />

    <div class="demo-section">
        <EditDate @bind-Value="_model.BasicDate"
                  Field="@(() => _model.BasicDate)" />
                  
        <EditDate @bind-Value="_model.BasicDate"
                  Field="@(() => _model.BasicDate)"
                  IsEditMode=false
                  Label="DateFormat = MM-dd-yyyy"
                  DateFormat="MM-dd-yyyy" />

        <EditDate @bind-Value="_model.BasicDate"
                  Field="@(() => _model.BasicDate)"
                  IsEditMode=false
                  Label="DateFormat = MM/dd/yy"
                  DateFormat="MM/dd/yy" />

        <EditDate @bind-Value="_model.BasicDate"
                  Field="@(() => _model.BasicDate)"
                  IsEditMode=false
                  Label="MM/dd/yyyy hh:mm:ss tt"
                  DateFormat="MM/dd/yyyy hh:mm:ss tt" />
    </div>

    <div class="demo-section">
        <EditDate @bind-Value="_model.NullableDate"
                  Field="@(() => _model.NullableDate)" />
    </div>

    <div class="demo-section">
        <EditDate @bind-Value="_model.DateWithTime"
                  Field="@(() => _model.DateWithTime)"
                  Type="InputDateType.DateTimeLocal"/>

        <EditDate @bind-Value="_model.DateWithTime"
                  Field="@(() => _model.DateWithTime)"
                  Type="InputDateType.DateTimeLocal"
                  IsEditMode="false"
                  Label="MM/dd/yyyy hh:mm:ss tt"
                  DateFormat="MM/dd/yyyy hh:mm:ss tt" />

        <EditDate @bind-Value="_model.TimeOnly"
                  Field="@(() => _model.TimeOnly)"
                  Type="InputDateType.Time" />

        <EditDate @bind-Value="_model.TimeOnly"
                  Field="@(() => _model.TimeOnly)"
                  Type="InputDateType.Time"
                  IsEditMode="false"
                  Label="hh:mm:ss tt"
                  DateFormat="hh:mm:ss tt" />
    </div>

    <div class="demo-section">
        <EditDate @bind-Value="_model.CustomStyle"
                  Field="@(() => _model.CustomStyle)"
                  ContainerClass="my-custom-container"
                  class="my-custom-date" />

        <style>
            .my-custom-container {
                background-color: cornflowerblue;
                padding: 10px;
                border-radius: 0px;
            }

            .my-custom-date {
                border: 6px solid darkgreen;
                border-radius: 4px;
                padding: 4px;
                color: magenta;
            }
        </style>
    </div>

    <div class="demo-section">
        <EditDate @bind-Value="_model.Disabled"
                  Field="@(() => _model.Disabled)"
                  IsDisabled="true" />

        <EditDate @bind-Value="_model.Required"
                  Field="@(() => _model.Required)" />
    </div>

</EditForm>

@code {
    readonly DemoEditDateModel _model = new();

    EditForm? _form;
    protected override void OnAfterRender(bool firstRender) => _form?.EditContext!.Validate();
    public class DemoEditDateModel
    {
        [Description("Basic Description")]
        public DateTime BasicDate { get; set; } = DateTime.Today;
        public DateTime? NullableDate { get; set; } = DateTime.Today;
        public DateTime DateWithTime { get; set; } = DateTime.Now;
        public DateTime TimeOnly { get; set; } = DateTime.Now;
        public DateTime CustomStyle { get; set; } = DateTime.Today;

        [Required]
        public DateTime? Required { get; set; } 
        public DateTime Disabled { get; set; } = DateTime.Today;

    }
}