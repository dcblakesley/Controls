@using Microsoft.AspNetCore.Components.Forms

<h1>EditTextArea Demo</h1>

<EditForm Model="@_model" class="flex-row flex-wrap" @ref=_form >
    <ObjectGraphDataAnnotationsValidator/>
    
    <div class="demo-section">
        <h2>Basic Usage</h2>
        <EditTextArea @bind-Value="_model.BasicTextArea"
                      Field="@(() => _model.BasicTextArea)" />

        <h2>Read-only</h2>
        <EditTextArea @bind-Value="_model.BasicTextArea"
                      Field="@(() => _model.BasicTextArea)" 
                      IsEditMode=false/>
    </div>

    <div class="demo-section">
        <h2>Custom Rows</h2>
        <EditTextArea @bind-Value="_model.LargerTextArea"
                      Rows="5"
                      Field="@(() => _model.LargerTextArea)"/>
    </div>

    <div class="demo-section">
        <h2>Custom Styling</h2>
        <style>
            .my-custom-container { background-color:cyan; padding: 10px; border-radius: 40px; }
            .my-custom-textarea { background-color: magenta; border: 2px solid #0066cc; border-radius: 40px; padding: 8px; width: 100%; min-height: 100px; font-family: 'Courier New', monospace; background:  }
        </style>
        <EditTextArea @bind-Value="_model.CustomStyling"
                      ContainerClass="my-custom-container"
                      class="my-custom-textarea"
                      Field="@(() => _model.CustomStyling)"/>
    </div>

    <div class="demo-section">
        <h2>State Options</h2>
        <EditTextArea @bind-Value="_model.Disabled"
                      IsDisabled="true"
                      Field="@(() => _model.Disabled)"/>

        <EditTextArea @bind-Value="_model.Required"
                      Field="@(() => _model.Required)"/>
    </div>
</EditForm>

@code {
    readonly DemoEditTextAreaModel _model = new();

    EditForm _form;
    protected override void OnAfterRender(bool firstRender) => _form.EditContext!.Validate();

    public class DemoEditTextAreaModel
    {
        public string BasicTextArea { get; set; } = "";
        public string LargerTextArea { get; set; } = "Rows isn't being respected in the test project right now.";
        public string CustomStyling { get; set; } = "I have custom styling";

        [Required] public string Required { get; set; } = "";

        public string Disabled { get; set; } = "This textarea is disabled";
    }
}
