@using Microsoft.AspNetCore.Components.Forms

<h1>EditRadioEnum Demo</h1>

<EditForm Model="@_model" class="flex-row flex-wrap" @ref=_form>
    <ObjectGraphDataAnnotationsValidator />

    <div class="demo-section">
        <EditRadioEnum @bind-Value="_model.BasicEnum"
                       Field="@(() => _model.BasicEnum)" />
    </div>
    <div class="demo-section">
        <EditRadioEnum @bind-Value="_model.BasicEnum"
                       Field="@(() => _model.BasicEnum)"
                       Label="Read-only"
                       IsEditMode="false" />
    </div>
    <div class="demo-section">
        <EditRadioEnum @bind-Value="_model.BasicEnum"
                       Field="@(() => _model.BasicEnum)" 
                       Label="Sorted"
                       Sort=true/>
    </div>
    <div class="demo-section">
        <EditRadioEnum @bind-Value=@_model.Other
                       Field="@(() => _model.Other)"
                       HasOtherOption="true"
                       OtherPlaceholder="Placeholders are fun..."
                       @bind-OtherValue="_model.OtherValue" />
    </div>
    <div class="demo-section">
        <EditRadioEnum @bind-Value=@_model.Other
                       Field="@(() => _model.Other)"
                       HasOtherOption="true"
                       Label="Other - Sorted"
                       Description="The final enum value still shows up on the bottom"
                       Sort="true"
                       @bind-OtherValue="_model.OtherValue" />
    </div>

    <div class="demo-section">
        <style>
            .my-custom-container {
                background-color: cyan;
                padding: 10px;
                border-radius: 4px;
            }

            .my-custom-label {
                font-weight: bold;
                color: #0066cc;
            }
        </style>

        <EditRadioEnum @bind-Value="_model.CustomStyling"
                       Field="@(() => _model.CustomStyling)"
                       class="my-custom-radio"
                       ContainerClass="my-custom-container"
                       LabelClass="my-custom-label" />
    </div>

    <div class="demo-section">
        <EditRadioEnum @bind-Value="_model.Disabled"
                       Field="@(() => _model.Disabled)"
                       IsDisabled="true" />

    </div>
    <div class="demo-section">
        <EditRadioEnum @bind-Value="_model.Required"
                       Field="@(() => _model.Required)" />
    </div>

    <div class="demo-section">
        <EditRadioEnum @bind-Value="_model.HorizontalLayout"
                       Field="@(() => _model.HorizontalLayout)"
                       IsHorizontal="true" />
    </div>
    <div class="demo-section">
        <EditRadioEnum @bind-Value="_model.Nullable"
                       Field="@(() => _model.Nullable)"/>
    </div>
    <div class="demo-section">
        <EditBool @bind-Value="IsCurrentlyRequired"
                   Field="@(() => IsCurrentlyRequired)"/>
        <EditRadioEnum @bind-Value="_model.SometimesRequired"
                       Field="@(() => _model.SometimesRequired)"
                       IsRequired=@IsCurrentlyRequired/>
    </div>
</EditForm>

@code {
    readonly DemoEditRadioEnumModel _model = new();
    public bool IsCurrentlyRequired { get; set; } = true;

    EditForm? _form;
    protected override void OnAfterRender(bool firstRender) => _form?.EditContext!.Validate();
    public class DemoEditRadioEnumModel
    {
        public Animal BasicEnum { get; set; }
        public Animal HorizontalLayout { get; set; }
        public Animal CustomStyling { get; set; }
        public Animal Disabled { get; set; }

        [Required]
        public Animal? Required { get; set; } = null;

        public Animal? Nullable { get; set; } = null;

        public Animal? SometimesRequired { get; set; }

        [DisplayName("Other / Custom Value")]
        public Bird Other { get; set; }
        public string? OtherValue { get; set; }
    }

    public enum Bird
    {
        Sparrow,
        Eagle,
        Parrot,
        Custom = 999
    }
}
