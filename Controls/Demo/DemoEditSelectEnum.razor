@using Microsoft.AspNetCore.Components.Forms

<h1>EditSelectEnum Demo</h1>

<EditForm Model="@_model" class="flex-row flex-wrap" ref=_form>
    <ObjectGraphDataAnnotationsValidator/>

    <div class="demo-section">
        <h2>Basic Usage</h2>
        <EditSelectEnum @bind-Value="_model.BasicEnum" Field="@(() => _model.BasicEnum)" />

        <h2>Read-only mode</h2>
        <EditSelectEnum @bind-Value="_model.BasicEnum" Field="@(() => _model.BasicEnum)" IsEditMode="false" />
    </div>


    <div class="demo-section">

        <style>
            .my-custom-container {
                background-color: lime;
                padding: 10px;
                border-radius: 4px;
            }
            .my-custom-select {
                border: 2px solid black;
                color: green;
                border-radius: 4px;
                padding: 4px;
                min-width: 200px;
            }
        </style>

        <h2>Custom Styling</h2>
        <EditSelectEnum @bind-Value="_model.CustomClass"
                        Field="@(() => _model.CustomClass)"
                        ContainerClass="my-custom-container"
                        class="my-custom-select"/>
    </div>

    <div class="demo-section">
        <h2>State Options</h2>
        <EditSelectEnum @bind-Value="_model.DisabledField"
                        Field="@(() => _model.DisabledField)"
                        IsDisabled="true"/>

        <EditSelectEnum @bind-Value="_model.RequiredField"
                        Field="@(() => _model.RequiredField)"/>
    </div>
</EditForm>

@code {

    EditForm _form;
    protected override void OnAfterRender(bool firstRender) => _form.EditContext!.Validate();

    readonly DemoEditSelectEnumModel _model = new();

    public class DemoEditSelectEnumModel
    {
        public Animal BasicEnum { get; set; }
        public Animal CustomClass { get; set; }

        [Required] public Animal RequiredField { get; set; }
        public Animal DisabledField { get; set; }
    }

}