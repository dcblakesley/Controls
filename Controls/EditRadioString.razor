@using Microsoft.AspNetCore.Components.Forms
@inherits InputText

@if (ShouldShowComponent)
{
    <div class="form-group @OuterClass">

        <fieldset>
            <legend>
                <FormLabel Id=@_id FieldIdentifier=@_fieldIdentifier Attributes=@_attributes Label=@Label/>
            </legend>

            @if (ShowEditor)
            {
                <InputRadioGroup @bind-Value=@SelectedOption
                                 id=@_id
                                 data-test-id=@_id
                                 disabled=@IsDisabled
                                 class=@CssClass
                                 required=@_isRequired
                                 aria-describedby=@($"desc-{_id}")
                                 aria-errormessage=@($"error-msg-{_id}")>

                    <div class=@(HasHorizontalRadioButtons ? "flex-row flex-wrap" : "flex-column") style="row-gap: 0">
                        @foreach (var option in Options)
                        {
                            <label class=@LabelClass>
                                <InputRadio Value=@option id=@($"rb_{_id}_{option}") data-test-id=@($"rb_{_id}_{option}")/>
                                @((MarkupString)option)
                            </label>
                        }
                    </div>
                    <!-- Other - Always on its own line -->
                    @if (HasOther)
                    {
                        <div>
                            <label>
                                <InputRadio Value=@OtherName id=@($"rb_{_id}_other") data-test-id=@($"rb_{_id}_other")/>
                                Other
                            </label>
                            <input disabled="@(_selectedOption != "Other")"
                                   type="text"
                                   id=@($"txt-{_id}-custom-value")
                                   aria-label="Custom text value input"
                                   @bind:get=@_otherText 
                                   @bind:set=SetOtherTextAsync 
                                   @bind:event="oninput"/>
                        </div>
                    }

                </InputRadioGroup>
            }
            else
            {
                <ReadOnlyValue Id=@_id IsRequired=@_isRequired CssClass=@CssClass Text=@Value />
            }

            <FieldValidationDisplay Id=@_id FieldIdentifier=_fieldIdentifier Attributes=_attributes />
            @if (FormOptions != null && FormOptions.ShowBoundValues)
            {
                <div class="bound-value">@CurrentValueAsString</div>
            }
        </fieldset>
    </div>   
}
