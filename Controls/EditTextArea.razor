@using System.Linq.Expressions
@using Microsoft.AspNetCore.Components.Forms
@inherits InputTextArea

<div class="form-group">
    <FormLabel Id=@_id FieldIdentifier=_fieldIdentifier Attributes=_attributes  />
    
    @if(IsEditMode)
    {
        <textarea @bind="CurrentValue" id=@_id data-test-id=@_id class=@Css ></textarea>
    }
    else{
        <div class="form-text">@Value</div>
    }
    
    <FieldValidationDisplay FieldIdentifier=_fieldIdentifier Attributes=_attributes />
</div>

@code {
    [Parameter] public string? Id { get; set; }
    [Parameter] public bool IsEditMode { get; set; }
    [Parameter] public required Expression<Func<string>> Field { get; set; }
    [Parameter] public string Css { get; set; } = "";

    string _id = string.Empty;
    List<Attribute>? _attributes;
    FieldIdentifier _fieldIdentifier;

    // Get validation messages for FieldName
    protected override void OnInitialized()
    {
        _fieldIdentifier = FieldIdentifier.Create(Field);
        _attributes = AttributesHelper.GetExpressionCustomAttributes(Field);
        _id = AttributesHelper.GetId(Id, _fieldIdentifier);
    }
}