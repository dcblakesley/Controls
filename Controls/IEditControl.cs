namespace Controls;

/// <summary> Common properties for all Edit Controls. </summary>
public interface IEditControl
{
    /// <summary>
    /// IDs are used for the label and input. If not provided, the Id will be
    /// automatically generated based on the name of the Property.
    /// </summary>
    public string? Id { get; set; }

    /// <summary>
    /// Optional, can be used to distinguish between multiple forms on the same page. <br/>
    /// ex. If you have a control that allows you to enter multiple people, 
    /// it would default to having duplicate IDs. <br/>
    /// </summary>
    /// <remarks>This is also available within <seealso cref="FormOptions"/> for applying it to a group of controls at the same time. </remarks>
    public string? IdPrefix { get; set; }

    /// <summary>
    /// Defaults to true, which shows the editors/inputs. When false, inputs are not shown,
    /// but the values are still displayed as a sort of review look.
    /// </summary>
    /// <remarks>This is also available within <seealso cref="FormOptions"/> for applying it to a group of controls at the same time. </remarks>
    public bool IsEditMode { get; set; }

    /// <summary> Not used </summary>
    public bool IsDisabled { get; set; }

    /// <summary>
    /// Allows setting the label within the markup instead of using the
    /// autogenerated label from the field name or the DisplayName attribute.
    /// </summary>
    public string? Label { get; set; }

    /// <summary>
    /// Set the Description for the control, which is typically displayed below the label as a <p></p> tag. <br/>
    /// The Description can also be set using the properties' Description Attribute.
    /// </summary>
    public string? Description { get; set; }

    /// <summary>
    /// Each control contains a container element 'edit-control-wrapper' this allows adding additional classes to that container.
    /// </summary>
    public string? ContainerClass { get; set; }
    
    /// <summary>
    /// Used when hiding is based on the value of the field, typically
    /// used for hiding controls that have a null backing field/property
    /// </summary>
    /// <remarks>This is also available within <seealso cref="FormOptions"/> for applying it to a group of controls at the same time. </remarks>
    public HidingMode? Hiding { get; set; }

    /// <summary> Used when hiding is based on some other condition, such as "IsControlXyzAvailable" </summary>
    public bool IsHidden { get; set; }
}