@inherits InputNumber<T>
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Components.Forms
@typeparam T

<div class="form-group">
    <FormLabel Id=@_id FieldIdentifier=@_fieldIdentifier Attributes=@_attributes Label=@Label />

    @if (IsEditMode)
    {    
        <input type="number" id=@Id data-test-id=@Id step=@Step @bind-value=@CurrentValueAsString @bind-value:event="oninput" class=@Css />
    }
    else
    {
        <div class="form-text">@Value</div>
    }
    
    <FieldValidationDisplay FieldIdentifier=@_fieldIdentifier Attributes=@_attributes />
</div>

@code {
    [Parameter] public string? Id { get; set; }
    [Parameter] public required Expression<Func<T>> Field { get; set; }
    [Parameter] public string Css { get; set; } = "";
    [Parameter] public bool IsEditMode { get; set; } = true;
    [Parameter] public decimal Step { get; set; }
    [Parameter] public string? Label { get; set; }

    string _id = string.Empty;
    List<Attribute>? _attributes;
    FieldIdentifier _fieldIdentifier;

    // Get validation messages for FieldName
    protected override void OnInitialized()
    {
        _fieldIdentifier = FieldIdentifier.Create(Field);
        _attributes = AttributesHelper.GetExpressionCustomAttributes(Field);
        _id = AttributesHelper.GetId(Id, _fieldIdentifier);
    }
}